{"ast":null,"code":"var _jsxFileName = \"/Users/watsonandrew/Desktop/scoreUp/react/src/components/friends/Friends.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createFriend, getFriends, updateFriends } from \"../../redux/reducers/friends.slice\";\nimport { getItem } from \"../../utils/storage.utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Friends = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    friends\n  } = useSelector(store => store.friends);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const token = getItem(\"token\");\n  console.log(friends);\n  useEffect(() => {\n    dispatch(getFriends(token));\n  }, []);\n\n  // const handleUpdateFriend = (key, value) => {\n  //   dispatch(updateFriends({ key, value }));\n  // };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(createFriend({\n      name,\n      email\n    }, token));\n    setName(\"\");\n    setEmail(\"\");\n    dispatch(getFriends(token));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [friends.map(friend => {\n      return /*#__PURE__*/_jsxDEV(\"article\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: friend.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: friend.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, friend.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"game\",\n        id: \"game\",\n        value: name,\n        placeholder: \"Name\",\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        id: \"email\",\n        value: email,\n        placeholder: \"Email\",\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Friends, \"cSZjwppraejWqbXB/Vke0K4I2Io=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Friends;\nexport default Friends;\nvar _c;\n$RefreshReg$(_c, \"Friends\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","createFriend","getFriends","updateFriends","getItem","Friends","dispatch","friends","store","name","setName","email","setEmail","token","console","log","handleSubmit","e","preventDefault","map","friend","id","target","value"],"sources":["/Users/watsonandrew/Desktop/scoreUp/react/src/components/friends/Friends.jsx"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  createFriend,\n  getFriends,\n  updateFriends,\n} from \"../../redux/reducers/friends.slice\";\nimport { getItem } from \"../../utils/storage.utils\";\n\nconst Friends = () => {\n  const dispatch = useDispatch();\n  const { friends } = useSelector((store) => store.friends);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const token = getItem(\"token\");\n  console.log(friends);\n  useEffect(() => {\n    dispatch(getFriends(token));\n  }, []);\n\n  // const handleUpdateFriend = (key, value) => {\n  //   dispatch(updateFriends({ key, value }));\n  // };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(createFriend({ name, email }, token));\n    setName(\"\");\n    setEmail(\"\");\n    dispatch(getFriends(token));\n  };\n  return (\n    <div>\n      {friends.map((friend) => {\n        return (\n          <article key={friend.id}>\n            <h3>{friend.name}</h3>\n            <p>{friend.email}</p>\n          </article>\n        );\n      })}\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"game\"\n          id=\"game\"\n          value={name}\n          placeholder=\"Name\"\n          onChange={(e) => setName(e.target.value)}\n          required\n        />\n        <input\n          type=\"email\"\n          name=\"email\"\n          id=\"email\"\n          value={email}\n          placeholder=\"Email\"\n          onChange={(e) => setEmail(e.target.value)}\n          required\n        />\n        <input type=\"submit\" />\n      </form>\n    </div>\n  );\n};\n\nexport default Friends;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SACEC,YAAY,EACZC,UAAU,EACVC,aAAa,QACR,oCAAoC;AAC3C,SAASC,OAAO,QAAQ,2BAA2B;AAAC;AAEpD,MAAMC,OAAO,GAAG,MAAM;EAAA;EACpB,MAAMC,QAAQ,GAAGP,WAAW,EAAE;EAC9B,MAAM;IAAEQ;EAAQ,CAAC,GAAGP,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACD,OAAO,CAAC;EACzD,MAAM,CAACE,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMgB,KAAK,GAAGT,OAAO,CAAC,OAAO,CAAC;EAC9BU,OAAO,CAACC,GAAG,CAACR,OAAO,CAAC;EACpBT,SAAS,CAAC,MAAM;IACdQ,QAAQ,CAACJ,UAAU,CAACW,KAAK,CAAC,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;;EAEA,MAAMG,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,EAAE;IAClBZ,QAAQ,CAACL,YAAY,CAAC;MAAEQ,IAAI;MAAEE;IAAM,CAAC,EAAEE,KAAK,CAAC,CAAC;IAC9CH,OAAO,CAAC,EAAE,CAAC;IACXE,QAAQ,CAAC,EAAE,CAAC;IACZN,QAAQ,CAACJ,UAAU,CAACW,KAAK,CAAC,CAAC;EAC7B,CAAC;EACD,oBACE;IAAA,WACGN,OAAO,CAACY,GAAG,CAAEC,MAAM,IAAK;MACvB,oBACE;QAAA,wBACE;UAAA,UAAKA,MAAM,CAACX;QAAI;UAAA;UAAA;UAAA;QAAA,QAAM,eACtB;UAAA,UAAIW,MAAM,CAACT;QAAK;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA,GAFTS,MAAM,CAACC,EAAE;QAAA;QAAA;QAAA;MAAA,QAGb;IAEd,CAAC,CAAC,eACF;MAAM,QAAQ,EAAEL,YAAa;MAAA,wBAC3B;QACE,IAAI,EAAC,MAAM;QACX,IAAI,EAAC,MAAM;QACX,EAAE,EAAC,MAAM;QACT,KAAK,EAAEP,IAAK;QACZ,WAAW,EAAC,MAAM;QAClB,QAAQ,EAAGQ,CAAC,IAAKP,OAAO,CAACO,CAAC,CAACK,MAAM,CAACC,KAAK,CAAE;QACzC,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QACR,eACF;QACE,IAAI,EAAC,OAAO;QACZ,IAAI,EAAC,OAAO;QACZ,EAAE,EAAC,OAAO;QACV,KAAK,EAAEZ,KAAM;QACb,WAAW,EAAC,OAAO;QACnB,QAAQ,EAAGM,CAAC,IAAKL,QAAQ,CAACK,CAAC,CAACK,MAAM,CAACC,KAAK,CAAE;QAC1C,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QACR,eACF;QAAO,IAAI,EAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAClB;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEV,CAAC;AAAC,GAvDIlB,OAAO;EAAA,QACMN,WAAW,EACRC,WAAW;AAAA;AAAA,KAF3BK,OAAO;AAyDb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}