{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { getRequest } from \"../../api/api\";\nexport const getGamePlayed = () => async (dispatch, getState) => {\n  const loading = getState().gamesPlayed.loading;\n  if (loading) return;\n  dispatch(startLoading());\n  const {\n    status,\n    result,\n    error\n  } = await getRequest(`/gamesplayed`, token);\n  if (error) {\n    return console.log(status, error);\n  }\n  dispatch(setGamePlayed({\n    gamesPlayed: result\n  }));\n};\nconst gamePlayedSlice = createSlice({\n  name: \"gamesPlayed\",\n  initialState: {\n    gamesPlayed: [],\n    loading: false\n  },\n  reducers: {\n    startLoading: state => {\n      return {\n        ...state,\n        loading: true\n      };\n    },\n    stopLoading: state => {\n      return {\n        ...state,\n        loading: false\n      };\n    },\n    setGamePlayed: (state, action) => {\n      return {\n        ...state,\n        loading: false,\n        gamesPlayed: [...action.payload.gamesPlayed]\n      };\n    }\n  }\n});\nexport const {\n  startLoading,\n  stopLoading,\n  setGamePlayed\n} = gamePlayedSlice.actions;\nexport default gamePlayedSlice.reducer;","map":{"version":3,"names":["createSlice","getRequest","getGamePlayed","dispatch","getState","loading","gamesPlayed","startLoading","status","result","error","token","console","log","setGamePlayed","gamePlayedSlice","name","initialState","reducers","state","stopLoading","action","payload","actions","reducer"],"sources":["/Users/watsonandrew/Desktop/scoreUp/react/src/redux/reducers/gamePlayed.slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { getRequest } from \"../../api/api\";\n\nexport const getGamePlayed = () => async (dispatch, getState) => {\n  const loading = getState().gamesPlayed.loading;\n  if (loading) return;\n  dispatch(startLoading());\n  const { status, result, error } = await getRequest(`/gamesplayed`, token);\n  if (error) {\n    return console.log(status, error);\n  }\n  dispatch(setGamePlayed({ gamesPlayed: result }));\n};\n\nconst gamePlayedSlice = createSlice({\n  name: \"gamesPlayed\",\n  initialState: {\n    gamesPlayed: [],\n    loading: false,\n  },\n  reducers: {\n    startLoading: (state) => {\n      return { ...state, loading: true };\n    },\n    stopLoading: (state) => {\n      return { ...state, loading: false };\n    },\n    setGamePlayed: (state, action) => {\n      return {\n        ...state,\n        loading: false,\n        gamesPlayed: [...action.payload.gamesPlayed],\n      };\n    },\n  },\n});\n\nexport const { startLoading, stopLoading, setGamePlayed } =\n  gamePlayedSlice.actions;\n\nexport default gamePlayedSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,UAAU,QAAQ,eAAe;AAE1C,OAAO,MAAMC,aAAa,GAAG,MAAM,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;EAC/D,MAAMC,OAAO,GAAGD,QAAQ,EAAE,CAACE,WAAW,CAACD,OAAO;EAC9C,IAAIA,OAAO,EAAE;EACbF,QAAQ,CAACI,YAAY,EAAE,CAAC;EACxB,MAAM;IAAEC,MAAM;IAAEC,MAAM;IAAEC;EAAM,CAAC,GAAG,MAAMT,UAAU,CAAE,cAAa,EAAEU,KAAK,CAAC;EACzE,IAAID,KAAK,EAAE;IACT,OAAOE,OAAO,CAACC,GAAG,CAACL,MAAM,EAAEE,KAAK,CAAC;EACnC;EACAP,QAAQ,CAACW,aAAa,CAAC;IAAER,WAAW,EAAEG;EAAO,CAAC,CAAC,CAAC;AAClD,CAAC;AAED,MAAMM,eAAe,GAAGf,WAAW,CAAC;EAClCgB,IAAI,EAAE,aAAa;EACnBC,YAAY,EAAE;IACZX,WAAW,EAAE,EAAE;IACfD,OAAO,EAAE;EACX,CAAC;EACDa,QAAQ,EAAE;IACRX,YAAY,EAAGY,KAAK,IAAK;MACvB,OAAO;QAAE,GAAGA,KAAK;QAAEd,OAAO,EAAE;MAAK,CAAC;IACpC,CAAC;IACDe,WAAW,EAAGD,KAAK,IAAK;MACtB,OAAO;QAAE,GAAGA,KAAK;QAAEd,OAAO,EAAE;MAAM,CAAC;IACrC,CAAC;IACDS,aAAa,EAAE,CAACK,KAAK,EAAEE,MAAM,KAAK;MAChC,OAAO;QACL,GAAGF,KAAK;QACRd,OAAO,EAAE,KAAK;QACdC,WAAW,EAAE,CAAC,GAAGe,MAAM,CAACC,OAAO,CAAChB,WAAW;MAC7C,CAAC;IACH;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEC,YAAY;EAAEa,WAAW;EAAEN;AAAc,CAAC,GACvDC,eAAe,CAACQ,OAAO;AAEzB,eAAeR,eAAe,CAACS,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}