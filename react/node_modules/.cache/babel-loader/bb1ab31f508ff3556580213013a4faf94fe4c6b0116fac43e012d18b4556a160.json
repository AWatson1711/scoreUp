{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { getRequest, postRequest } from \"../../api/api\";\nimport { getItem } from \"../../utils/storage.utils\";\nconst token = getItem(\"token\");\n\n// export const getGamePlayed = (token) => async (dispatch, getState) => {\n//   const loading = getState().gamesPlayed.loading;\n//   if (loading) return;\n//   dispatch(startLoading());\n//   const { status, result, error } = await getRequest(`/gamesplayed`, token);\n//   if (error) {\n//     return console.log(status, error);\n//   }\n//   dispatch(setGamePlayed(result));\n// };\n\nexport const getStats = createAsyncThunk(\"stats/getStat\", async thunkApi => {\n  const {\n    fulfillWithValue,\n    rejectWithValue\n  } = thunkApi;\n  const {\n    status,\n    result,\n    error\n  } = await getRequest(`/stats/`, token);\n  return error ? rejectWithValue(`Cannot get Stat - Error status ${status} - ${error}`) : fulfillWithValue(result);\n});\nexport const getOneStat = createAsyncThunk(\"stats/getOne\", async (statId, thunkApi) => {\n  const {\n    fulfillWithValue,\n    rejectWithValue\n  } = thunkApi;\n  const {\n    status,\n    result,\n    error\n  } = await getRequest(`/stats/${statId}`, token);\n  return error ? rejectWithValue(`Cannot get stat - Error status ${status} - ${error}`) : fulfillWithValue(result);\n});\nexport const createStat = createAsyncThunk(\"stats/create\", async (form, thunkApi) => {\n  const {\n    fulfillWithValue,\n    rejectWithValue\n  } = thunkApi;\n  // const token = getItem(\"token\");\n  const {\n    status,\n    result,\n    error\n  } = await postRequest(`/games/create`, {\n    form\n  }, token);\n  return error ? rejectWithValue(`Cannot post game - Error status ${status} - ${error}`) : fulfillWithValue(result);\n});\nconst statSlice = createSlice({\n  name: \"stats\",\n  initialState: {\n    stats: [],\n    loading: false\n  },\n  reducers: {\n    startLoading: state => {\n      return {\n        ...state,\n        loading: true\n      };\n    },\n    stopLoading: state => {\n      return {\n        ...state,\n        loading: false\n      };\n    }\n    // setGamePlayed: (state, action) => {\n    //   return {\n    //     ...state,\n    //     loading: false,\n    //     gamesPlayed: [...action.payload.gamesPlayed],\n    //   };\n    // },\n  },\n\n  extraReducers: builder => {\n    builder.addCase(getOneStat.fulfilled, (state, action) => {\n      return {\n        ...state,\n        loading: false,\n        stats: [action.payload.stats]\n      };\n    }).addCase(getOneStat.rejected, (state, action) => {\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    }).addCase(getOneStat.pending, (state, action) => {\n      return {\n        ...state,\n        loading: true\n      };\n    }).addCase(getStats.fulfilled, (state, action) => {\n      return {\n        ...state,\n        loading: false,\n        stats: [...action.payload.stats]\n      };\n    }).addCase(getStats.rejected, (state, action) => {\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    }).addCase(getStats.pending, (state, action) => {\n      return {\n        ...state,\n        loading: true\n      };\n    });\n  }\n});\nexport const {\n  startLoading,\n  stopLoading\n} = statSlice.actions;\nexport default statSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","getRequest","postRequest","getItem","token","getStats","thunkApi","fulfillWithValue","rejectWithValue","status","result","error","getOneStat","statId","createStat","form","statSlice","name","initialState","stats","loading","reducers","startLoading","state","stopLoading","extraReducers","builder","addCase","fulfilled","action","payload","rejected","pending","actions","reducer"],"sources":["/Users/watsonandrew/Desktop/scoreUp/react/src/redux/reducers/stat.slice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { getRequest, postRequest } from \"../../api/api\";\nimport { getItem } from \"../../utils/storage.utils\";\n\nconst token = getItem(\"token\");\n\n// export const getGamePlayed = (token) => async (dispatch, getState) => {\n//   const loading = getState().gamesPlayed.loading;\n//   if (loading) return;\n//   dispatch(startLoading());\n//   const { status, result, error } = await getRequest(`/gamesplayed`, token);\n//   if (error) {\n//     return console.log(status, error);\n//   }\n//   dispatch(setGamePlayed(result));\n// };\n\nexport const getStats = createAsyncThunk(\"stats/getStat\", async (thunkApi) => {\n  const { fulfillWithValue, rejectWithValue } = thunkApi;\n  const { status, result, error } = await getRequest(`/stats/`, token);\n  return error\n    ? rejectWithValue(`Cannot get Stat - Error status ${status} - ${error}`)\n    : fulfillWithValue(result);\n});\n\nexport const getOneStat = createAsyncThunk(\n  \"stats/getOne\",\n  async (statId, thunkApi) => {\n    const { fulfillWithValue, rejectWithValue } = thunkApi;\n    const { status, result, error } = await getRequest(\n      `/stats/${statId}`,\n      token,\n    );\n    return error\n      ? rejectWithValue(`Cannot get stat - Error status ${status} - ${error}`)\n      : fulfillWithValue(result);\n  },\n);\n\nexport const createStat = createAsyncThunk(\n  \"stats/create\",\n  async (form, thunkApi) => {\n    const { fulfillWithValue, rejectWithValue } = thunkApi;\n    // const token = getItem(\"token\");\n    const { status, result, error } = await postRequest(\n      `/games/create`,\n      { form },\n      token,\n    );\n    return error\n      ? rejectWithValue(`Cannot post game - Error status ${status} - ${error}`)\n      : fulfillWithValue(result);\n  },\n);\n\nconst statSlice = createSlice({\n  name: \"stats\",\n  initialState: {\n    stats: [],\n    loading: false,\n  },\n  reducers: {\n    startLoading: (state) => {\n      return { ...state, loading: true };\n    },\n    stopLoading: (state) => {\n      return { ...state, loading: false };\n    },\n    // setGamePlayed: (state, action) => {\n    //   return {\n    //     ...state,\n    //     loading: false,\n    //     gamesPlayed: [...action.payload.gamesPlayed],\n    //   };\n    // },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getOneStat.fulfilled, (state, action) => {\n        return {\n          ...state,\n          loading: false,\n          stats: [action.payload.stats],\n        };\n      })\n      .addCase(getOneStat.rejected, (state, action) => {\n        return { ...state, loading: false, error: action.payload };\n      })\n      .addCase(getOneStat.pending, (state, action) => {\n        return { ...state, loading: true };\n      })\n      .addCase(getStats.fulfilled, (state, action) => {\n        return {\n          ...state,\n          loading: false,\n          stats: [...action.payload.stats],\n        };\n      })\n      .addCase(getStats.rejected, (state, action) => {\n        return { ...state, loading: false, error: action.payload };\n      })\n      .addCase(getStats.pending, (state, action) => {\n        return { ...state, loading: true };\n      });\n  },\n});\n\nexport const { startLoading, stopLoading } = statSlice.actions;\n\nexport default statSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}