{"ast":null,"code":"import { postRequest } from \"../../api/api\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nexport const signUp = redirect => async (dispatch, getState) => {\n  const loading = getState().user.loading;\n  if (loading) return;\n  dispatch(startLoading());\n  const {\n    status,\n    result,\n    error\n  } = await postRequest(`/users/sign-up`);\n  console.log(status, error, result);\n  if (status === 200) {\n    redirect();\n  }\n  dispatch(stopLoading());\n};\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    name: \"\",\n    firstname: \"\",\n    email: \"\",\n    number: \"\",\n    password: \"\",\n    loading: false\n  },\n  reducers: {\n    startLoading: state => {\n      return {\n        ...state,\n        loading: true\n      };\n    },\n    stopLoading: state => {\n      return {\n        ...state,\n        loading: false\n      };\n    },\n    updateUser: (state, action) => {\n      const {\n        key,\n        value\n      } = action.payload;\n      return {\n        ...state,\n        [key]: value\n      };\n      // state[key] = value;\n    }\n  }\n});\n\nexport const {\n  startLoading,\n  stopLoading,\n  updateUser\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["postRequest","createSlice","signUp","redirect","dispatch","getState","loading","user","startLoading","status","result","error","console","log","stopLoading","userSlice","name","initialState","firstname","email","number","password","reducers","state","updateUser","action","key","value","payload","actions","reducer"],"sources":["/Users/watsonandrew/Desktop/scoreUp/react/src/redux/reducers/user.slice.js"],"sourcesContent":["import { postRequest } from \"../../api/api\";\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nexport const signUp = (redirect) => async (dispatch, getState) => {\n  const loading = getState().user.loading;\n  if (loading) return;\n  dispatch(startLoading());\n  const { status, result, error } = await postRequest(`/users/sign-up`);\n  console.log(status, error, result);\n  if (status === 200) {\n    redirect();\n  }\n  dispatch(stopLoading());\n};\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    name: \"\",\n    firstname: \"\",\n    email: \"\",\n    number: \"\",\n    password: \"\",\n    loading: false,\n  },\n  reducers: {\n    startLoading: (state) => {\n      return { ...state, loading: true };\n    },\n    stopLoading: (state) => {\n      return { ...state, loading: false };\n    },\n    updateUser: (state, action) => {\n      const { key, value } = action.payload;\n      return { ...state, [key]: value };\n      // state[key] = value;\n    },\n  },\n});\n\nexport const { startLoading, stopLoading, updateUser } = userSlice.actions;\nexport default userSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,eAAe;AAC3C,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,MAAMC,MAAM,GAAIC,QAAQ,IAAK,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;EAChE,MAAMC,OAAO,GAAGD,QAAQ,EAAE,CAACE,IAAI,CAACD,OAAO;EACvC,IAAIA,OAAO,EAAE;EACbF,QAAQ,CAACI,YAAY,EAAE,CAAC;EACxB,MAAM;IAAEC,MAAM;IAAEC,MAAM;IAAEC;EAAM,CAAC,GAAG,MAAMX,WAAW,CAAE,gBAAe,CAAC;EACrEY,OAAO,CAACC,GAAG,CAACJ,MAAM,EAAEE,KAAK,EAAED,MAAM,CAAC;EAClC,IAAID,MAAM,KAAK,GAAG,EAAE;IAClBN,QAAQ,EAAE;EACZ;EACAC,QAAQ,CAACU,WAAW,EAAE,CAAC;AACzB,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGd,WAAW,CAAC;EACnCe,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZD,IAAI,EAAE,EAAE;IACRE,SAAS,EAAE,EAAE;IACbC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE,EAAE;IACZf,OAAO,EAAE;EACX,CAAC;EACDgB,QAAQ,EAAE;IACRd,YAAY,EAAGe,KAAK,IAAK;MACvB,OAAO;QAAE,GAAGA,KAAK;QAAEjB,OAAO,EAAE;MAAK,CAAC;IACpC,CAAC;IACDQ,WAAW,EAAGS,KAAK,IAAK;MACtB,OAAO;QAAE,GAAGA,KAAK;QAAEjB,OAAO,EAAE;MAAM,CAAC;IACrC,CAAC;IACDkB,UAAU,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC7B,MAAM;QAAEC,GAAG;QAAEC;MAAM,CAAC,GAAGF,MAAM,CAACG,OAAO;MACrC,OAAO;QAAE,GAAGL,KAAK;QAAE,CAACG,GAAG,GAAGC;MAAM,CAAC;MACjC;IACF;EACF;AACF,CAAC,CAAC;;AAEF,OAAO,MAAM;EAAEnB,YAAY;EAAEM,WAAW;EAAEU;AAAW,CAAC,GAAGT,SAAS,CAACc,OAAO;AAC1E,eAAed,SAAS,CAACe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}