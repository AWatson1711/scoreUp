{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nexport const createGame = createAsyncThunk(\"/games/create\", async (userid, thunkApi) => {\n  const {\n    fulfillWithValue,\n    rejectWithValue\n  } = thunkApi;\n  const token = getItem(\"token\");\n  const {\n    status,\n    result,\n    error\n  } = await postRequest(`/games/create`, token);\n  return error ? rejectWithValue(`Cannot get user - Error status ${status} - ${error}`) : fulfillWithValue(result);\n});\nconst gameSlice = createSlice({\n  name: \"game\",\n  initialState: {\n    name: \"\",\n    loading: false\n  },\n  reducers: {\n    startLoading: state => {\n      return {\n        ...state,\n        loading: true\n      };\n    },\n    stopLoading: state => {\n      return {\n        ...state,\n        loading: false\n      };\n    },\n    updateGame: (state, action) => {\n      const {\n        key,\n        value\n      } = action.payload;\n      return {\n        ...state,\n        [key]: value\n      };\n      // state[key] = value;\n    }\n  }\n});\n\nexport const {\n  startLoading,\n  stopLoading,\n  updateGame\n} = gameSlice.actions;\nexport default gameSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","createGame","userid","thunkApi","fulfillWithValue","rejectWithValue","token","getItem","status","result","error","postRequest","gameSlice","name","initialState","loading","reducers","startLoading","state","stopLoading","updateGame","action","key","value","payload","actions","reducer"],"sources":["/Users/watsonandrew/Desktop/scoreUp/react/src/redux/reducers/game.slice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nexport const createGame = createAsyncThunk(\n  \"/games/create\",\n  async (userid, thunkApi) => {\n    const { fulfillWithValue, rejectWithValue } = thunkApi;\n\n    const token = getItem(\"token\");\n\n    const { status, result, error } = await postRequest(`/games/create`, token);\n\n    return error\n      ? rejectWithValue(`Cannot get user - Error status ${status} - ${error}`)\n      : fulfillWithValue(result);\n  },\n);\n\nconst gameSlice = createSlice({\n  name: \"game\",\n  initialState: {\n    name: \"\",\n    loading: false,\n  },\n  reducers: {\n    startLoading: (state) => {\n      return { ...state, loading: true };\n    },\n    stopLoading: (state) => {\n      return { ...state, loading: false };\n    },\n    updateGame: (state, action) => {\n      const { key, value } = action.payload;\n      return { ...state, [key]: value };\n      // state[key] = value;\n    },\n  },\n});\n\nexport const { startLoading, stopLoading, updateGame } = gameSlice.actions;\n\nexport default gameSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAEhE,OAAO,MAAMC,UAAU,GAAGF,gBAAgB,CACxC,eAAe,EACf,OAAOG,MAAM,EAAEC,QAAQ,KAAK;EAC1B,MAAM;IAAEC,gBAAgB;IAAEC;EAAgB,CAAC,GAAGF,QAAQ;EAEtD,MAAMG,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC;EAE9B,MAAM;IAAEC,MAAM;IAAEC,MAAM;IAAEC;EAAM,CAAC,GAAG,MAAMC,WAAW,CAAE,eAAc,EAAEL,KAAK,CAAC;EAE3E,OAAOI,KAAK,GACRL,eAAe,CAAE,kCAAiCG,MAAO,MAAKE,KAAM,EAAC,CAAC,GACtEN,gBAAgB,CAACK,MAAM,CAAC;AAC9B,CAAC,CACF;AAED,MAAMG,SAAS,GAAGZ,WAAW,CAAC;EAC5Ba,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZD,IAAI,EAAE,EAAE;IACRE,OAAO,EAAE;EACX,CAAC;EACDC,QAAQ,EAAE;IACRC,YAAY,EAAGC,KAAK,IAAK;MACvB,OAAO;QAAE,GAAGA,KAAK;QAAEH,OAAO,EAAE;MAAK,CAAC;IACpC,CAAC;IACDI,WAAW,EAAGD,KAAK,IAAK;MACtB,OAAO;QAAE,GAAGA,KAAK;QAAEH,OAAO,EAAE;MAAM,CAAC;IACrC,CAAC;IACDK,UAAU,EAAE,CAACF,KAAK,EAAEG,MAAM,KAAK;MAC7B,MAAM;QAAEC,GAAG;QAAEC;MAAM,CAAC,GAAGF,MAAM,CAACG,OAAO;MACrC,OAAO;QAAE,GAAGN,KAAK;QAAE,CAACI,GAAG,GAAGC;MAAM,CAAC;MACjC;IACF;EACF;AACF,CAAC,CAAC;;AAEF,OAAO,MAAM;EAAEN,YAAY;EAAEE,WAAW;EAAEC;AAAW,CAAC,GAAGR,SAAS,CAACa,OAAO;AAE1E,eAAeb,SAAS,CAACc,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}