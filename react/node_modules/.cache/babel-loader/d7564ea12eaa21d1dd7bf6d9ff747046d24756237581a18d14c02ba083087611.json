{"ast":null,"code":"import { API_URL } from \"../constants/api-url.constant\";\nimport axios from \"axios\";\nconst getRequest = async function (url) {\n  let token = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  const config = {\n    method: \"GET\",\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    }\n  };\n  if (token) config.headers.Authorization = token;\n  return await request(url, config);\n};\nconst postRequest = async function (url, data) {\n  let token = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  const config = {\n    method: \"POST\",\n    data: {},\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    }\n  };\n  if (token) config.headers.Authorization = token;\n  return await request(url, config);\n};\nconst putRequest = async function (url) {\n  let body = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let token = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  const config = {\n    method: \"PUT\",\n    body: JSON.stringify(body),\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    }\n  };\n  if (token) config.headers.Authorization = token;\n  return await request(url, config);\n};\nconst deleteRequest = async function (url) {\n  let body = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let token = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  const config = {\n    method: \"DELETE\",\n    body: JSON.stringify(body),\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    }\n  };\n  if (token) config.headers.Authorization = token;\n  return await request(url, config);\n};\nconst request = async (url, config) => {\n  let status = -1;\n  let error = null;\n  let result = null;\n  try {\n    const response = await axios(`${API_URL}${url}`, config);\n    status = response.status;\n    result = await response.data;\n    console.log(result);\n  } catch (e) {\n    error = e.message;\n  } finally {\n    return handleResponse(result, status, error);\n  }\n};\nconst handleResponse = (result, status, error) => {\n  const hasError = !result || status >= 400;\n  return {\n    status,\n    result: hasError ? null : result,\n    error: hasError ? `Result is null ${error || \"\"}` : null\n  };\n};\nexport { getRequest, postRequest, putRequest, deleteRequest };","map":{"version":3,"names":["API_URL","axios","getRequest","url","token","config","method","headers","Authorization","request","postRequest","data","putRequest","body","JSON","stringify","deleteRequest","status","error","result","response","console","log","e","message","handleResponse","hasError"],"sources":["/Users/watsonandrew/Desktop/scoreUp/react/src/api/api.js"],"sourcesContent":["import { API_URL } from \"../constants/api-url.constant\";\nimport axios from \"axios\";\n\nconst getRequest = async (url, token = null) => {\n  const config = {\n    method: \"GET\",\n    headers: { \"Content-type\": \"application/json; charset=UTF-8\" },\n  };\n\n  if (token) config.headers.Authorization = token;\n\n  return await request(url, config);\n};\n\nconst postRequest = async (url, data, token = null) => {\n  const config = {\n    method: \"POST\",\n    data: {},\n    headers: { \"Content-type\": \"application/json; charset=UTF-8\" },\n  };\n\n  if (token) config.headers.Authorization = token;\n\n  return await request(url, config);\n};\n\nconst putRequest = async (url, body = {}, token = null) => {\n  const config = {\n    method: \"PUT\",\n    body: JSON.stringify(body),\n    headers: { \"Content-type\": \"application/json; charset=UTF-8\" },\n  };\n\n  if (token) config.headers.Authorization = token;\n\n  return await request(url, config);\n};\n\nconst deleteRequest = async (url, body = {}, token = null) => {\n  const config = {\n    method: \"DELETE\",\n    body: JSON.stringify(body),\n    headers: { \"Content-type\": \"application/json; charset=UTF-8\" },\n  };\n\n  if (token) config.headers.Authorization = token;\n\n  return await request(url, config);\n};\n\nconst request = async (url, config) => {\n  let status = -1;\n  let error = null;\n  let result = null;\n\n  try {\n    const response = await axios(`${API_URL}${url}`, config);\n    status = response.status;\n    result = await response.data;\n    console.log(result);\n  } catch (e) {\n    error = e.message;\n  } finally {\n    return handleResponse(result, status, error);\n  }\n};\n\nconst handleResponse = (result, status, error) => {\n  const hasError = !result || status >= 400;\n  return {\n    status,\n    result: hasError ? null : result,\n    error: hasError ? `Result is null ${error || \"\"}` : null,\n  };\n};\n\nexport { getRequest, postRequest, putRequest, deleteRequest };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}